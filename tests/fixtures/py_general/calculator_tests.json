{
  "test_id": 1,
  "test_name": "Calculator Multi-Step Test",
  "description": "Tests calculator operations with object persistence",
  "test_type": "py_general",
  "checks": [
    {
      "check_id": 1,
      "name_for_output": "Create Calculator",
      "reason_for_output": "Failed to create calculator instance",
      "explain_for_error": "Calculator class should be properly defined with __init__ method",
      "spec": {
        "perform": {
          "action": "create_object",
          "target": "Calculator",
          "params": {
            "args": [10.0]
          },
          "save_as": "calc"
        },
        "expect": {
          "return_value": {
            "assertion": "is_instance_of",
            "value": "Calculator"
          }
        }
      }
    },
    {
      "check_id": 2,
      "name_for_output": "Test Addition",
      "reason_for_output": "Addition method returned {actual}, expected {expected}",
      "explain_for_error": "Calculator.add() should add the value and return the new total",
      "spec": {
        "perform": {
          "action": "call_method",
          "target": "add",
          "params": {
            "object_ref": "calc",
            "args": [5.0]
          }
        },
        "expect": {
          "return_value": {
            "assertion": "equals",
            "value": 15.0
          }
        }
      }
    },
    {
      "check_id": 3,
      "name_for_output": "Test Current Value",
      "reason_for_output": "Calculator value is {actual}, expected {expected}",
      "explain_for_error": "Calculator should maintain its current value in the 'value' attribute",
      "spec": {
        "perform": {
          "action": "get_attribute",
          "target": "value",
          "params": {
            "object_ref": "calc"
          }
        },
        "expect": {
          "return_value": {
            "assertion": "equals",
            "value": 15.0
          }
        }
      }
    },
    {
      "check_id": 4,
      "name_for_output": "Test Division by Zero",
      "reason_for_output": "Division by zero should raise ValueError, got {actual}",
      "explain_for_error": "Calculator.divide() should raise ValueError when dividing by zero",
      "spec": {
        "perform": {
          "action": "call_method",
          "target": "divide",
          "params": {
            "object_ref": "calc",
            "args": [0]
          }
        },
        "expect": {
          "return_value": {
            "assertion": "raises_exception",
            "value": "ValueError"
          }
        }
      }
    }
  ]
}